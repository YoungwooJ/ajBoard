<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.repository.MemberMapper">
    <!--관리자 : 회원 권한 수정-->
    <update id="updateMemberGrade" parameterType="com.example.demo.domain.MemberDTO">
        UPDATE member
        SET level = #{level}
            , updatedate = CURRENT_TIMESTAMP
        WHERE id = #{id};
    </update>
    
    <!--관리자 : 회원 목록-->
    <select id="selectMemberList" resultType="com.example.demo.domain.MemberDTO" >
        SELECT
            id
            , password
            , name
            , birth
            , gender
            , phone
            , email
            , level
            , createdate
            , updatedate
            , remv_flag remvFlag
        FROM member
        ORDER BY createdate ASC;
    </select>

    <!--스프링 시큐리티 로그인-->
    <select id="findByUsername" parameterType="java.lang.String" resultType="com.example.demo.domain.MemberDTO">
        SELECT
            id
            , name
            , birth
            , gender
            , phone
            , email
            , level
            , createdate
            , updatedate
            , remv_flag remvFlag
        FROM member
        WHERE name = #{name} AND remv_flag = 'N';
    </select>

    <!--아이디 찾기-->
    <select id="findMemberId" parameterType="com.example.demo.domain.MemberDTO" resultType="com.example.demo.domain.MemberDTO">
        SELECT
            id
            , name
            , birth
            , gender
            , phone
            , email
            , level
            , createdate
            , updatedate
            , remv_flag remvFlag
        FROM member
        WHERE name = #{name} AND birth = #{birth} AND gender = #{gender} AND phone = #{phone} AND remv_flag = 'N';
    </select>

    <!--Email과 id의 일치여부를 check-->
    <select id="selectEmailCheck" parameterType="com.example.demo.domain.MemberDTO" resultType="com.example.demo.domain.MemberDTO">
        SELECT
            id
            , name
            , birth
            , gender
            , phone
            , email
            , level
            , createdate
            , updatedate
            , remv_flag remvFlag
        FROM member
        WHERE email = #{email} AND id = #{id} AND remv_flag = 'N';
    </select>

    <!--회원탈퇴-->
    <delete id="deleteMember" parameterType="com.example.demo.domain.MemberDTO">
        UPDATE member
        SET remv_flag = 'Y'
            , updatedate = CURRENT_TIMESTAMP
        WHERE id = #{id};
    </delete>

    <!--회원 비밀번호 수정-->
    <update id="updateMemberPassword" parameterType="com.example.demo.domain.MemberDTO">
        UPDATE member
        SET password = #{password}
            , updatedate = CURRENT_TIMESTAMP
        WHERE id = #{id};
    </update>

    <!--회원 정보 수정-->
    <update id="updateMember" parameterType="hashmap">
        UPDATE member
        SET <if test="name != null and !name.equals('')">name = #{name}</if>
            <if test="birth != null and !birth.equals('')">, birth = #{birth}</if>
            <if test="gender != null and !gender.equals('')">, gender = #{gender}</if>
            <if test="phone != null and !phone.equals('')">, phone = #{phone}</if>
            <if test="email != null and !email.equals('')">, email = #{email}</if>
            , updatedate = CURRENT_TIMESTAMP
        WHERE id = #{oldId};
    </update>

    <!--회원가입-->
    <insert id="insertMember" parameterType="com.example.demo.domain.MemberDTO">
        INSERT INTO member (
            id
            , password
            , name
            , birth
            , gender
            , phone
            , email
            , level
            , createdate
            , updatedate
            , remv_flag
        ) VALUES (
            #{id}
            , #{password}
            , #{name}
            , #{birth}
            , #{gender}
            , #{phone}
            , #{email}
            , 0
            , CURRENT_TIMESTAMP
            , CURRENT_TIMESTAMP
            , 'N'
        );
    </insert>

    <!--아이디 중복체크-->
    <select id="selectIdCheck" parameterType="java.lang.String" resultType="com.example.demo.domain.MemberDTO">
        SELECT
            id
            , remv_flag remvFlag
        FROM member
        WHERE id = #{id} AND remv_flag ='N';
    </select>

    <!--회원정보조회-->
    <select id="selectMemberOne" parameterType="java.lang.String" resultType="com.example.demo.domain.MemberDTO" >
        SELECT
            id
             , password
             , name
             , birth
             , gender
             , phone
             , email
             , level
             , createdate
             , updatedate
             , remv_flag remvFlag
        FROM member
        WHERE id = #{id} AND remv_flag = 'N';
    </select>

    <!--로그인-->
    <select id="login" parameterType="com.example.demo.domain.MemberDTO" resultType="com.example.demo.domain.MemberDTO" >
        SELECT
            id
            , name
            , birth
            , gender
            , phone
            , email
            , level
            , createdate
            , updatedate
            , remv_flag remvFlag
        FROM member
        WHERE id = #{id} AND password = #{password} AND remv_flag = 'N';
    </select>
</mapper>